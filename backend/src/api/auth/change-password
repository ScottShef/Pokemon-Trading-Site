const express = require("express");
const bcrypt = require("bcryptjs");
const User = require("../models/User");       // your Mongoose user model
const authMiddleware = require("../middleware/auth"); // JWT verification

const router = express.Router();

router.put("/change-password", authMiddleware, async (req, res) => {
  try {
    console.log("Incoming request body:", req.body); // logs currentPassword and newPassword
    console.log("User ID from token:", req.userId);

    const { currentPassword, newPassword } = req.body;
    const userId = req.userId;

    if (!currentPassword || !newPassword) {
      console.log("Missing currentPassword or newPassword");
      return res.status(400).json({ error: "All fields are required" });
    }

    const user = await User.findById(userId);
    if (!user) {
      console.log("User not found");
      return res.status(404).json({ error: "User not found" });
    }

    const isMatch = await bcrypt.compare(currentPassword, user.password);
    if (!isMatch) {
      console.log("Current password does not match");
      return res.status(400).json({ error: "Current password is incorrect" });
    }

    console.log("Current password verified, hashing new password...");
    const salt = await bcrypt.genSalt(10);
    user.password = await bcrypt.hash(newPassword, salt);

    await user.save();
    console.log("Password updated successfully in DB");

    res.json({ message: "Password updated successfully" });
  } catch (err) {
    console.error("Error in change-password route:", err);
    res.status(500).json({ error: "Server error" });
  }
});

module.exports = router;